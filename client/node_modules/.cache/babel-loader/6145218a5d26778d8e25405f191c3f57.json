{"ast":null,"code":"var _jsxFileName = \"/Users/bolad/Desktop/react-projects/bld-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); //Route makes available its props match, history and location\n//match.path gives us the /shop path defined in App.js for ShopPage\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsuscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsuscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPage, Object.assign({\n        isLoading: loading\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst matchDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, matchDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/bolad/Desktop/react-projects/bld-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","CollectionPage","WithSpinner","Route","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsuscribeFromSnapShot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","otherProps","matchDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,MAAMC,8BAA8B,GAAGN,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGP,WAAW,CAACD,cAAD,CAA7C,C,CAEA;AACA;;AACA,MAAMS,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,sBALmC,GAKV,IALU;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEV,MAAAA;AAAF,QAAwB,KAAKW,KAAnC;AAEA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,sBAAL,GAA8BG,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ6B,CAA9B;AAKH;;AAEDU,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAI,GAAEY,KAAK,CAACC,IAAK,EAAlC;AACI,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGH;AAA5C,SAA0Da,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACC,IAAK,gBAA3B;AACI,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGH;AAA5B,SAA0Ca,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AA7BkC;;AAgCvC,MAAMC,oBAAoB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAEgB,cAAc,IAC7BO,QAAQ,CAACvB,iBAAiB,CAACgB,cAAD,CAAlB;AAF0B,CAAL,CAArC;;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAOuB,oBAAP,CAAP,CAAoCjB,QAApC,CAAf","sourcesContent":["import React from 'react'\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n//Route makes available its props match, history and location\n//match.path gives us the /shop path defined in App.js for ShopPage\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    };\n\n    unsuscribeFromSnapShot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n\n        const collectionRef = firestore.collection('collections');\n        this.unsuscribeFromSnapShot = collectionRef.onSnapshot( async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({ loading: false })\n        })\n    }\n\n    render () {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className=\"shop-page\">\n                <Route exact path={ `${match.path}`} \n                    render={(props) => <CollectionsOverviewWithSpinner isLoading={ loading } {...otherProps} />} />\n                <Route path={`${match.path}/:collectionId`} \n                    render={(props) => <CollectionPage isLoading={ loading } {...otherProps} />} />\n            </div>\n        )\n    }\n}\n\nconst matchDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => \n        dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, matchDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}