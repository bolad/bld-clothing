{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections //state\n); //create a selector to convert the collection object into an array so we can still use \n// .map to iterate over it\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], //Object.keys returns the keys of an object as an array, maps over the array of\n// keys and get the value of the collections object at that key\ncollections => collections ? Object.keys(collections).map(key => collections[key]) : []); //Find the collection id matching the url param of the collection id map\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], //look inside the collections map object to find the corresponding colection object\n//and pass it to the CollectionPage component\ncollections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const isCollectionsLoaded = createSelector([selectShop], //if our collections is loaded return true, otherwise return false\nshop => !!shop.collections);","map":{"version":3,"sources":["/Users/bolad/Desktop/react-projects/bld-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","isCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAElB;AAFkB,CAAxC,C,CAKP;AACA;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErD;AACA;AACAC,WAAW,IACPA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EALrB,CAAlD,C,CASP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAC9CZ,cAAc,CACV,CAACI,iBAAD,CADU,EAEV;AACA;AACAC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAJrD,CADX;AAQP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,mBAAmB,GAAGf,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7C;AACAE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAH8B,CAA1C","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections //state\n);\n\n//create a selector to convert the collection object into an array so we can still use \n// .map to iterate over it\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    //Object.keys returns the keys of an object as an array, maps over the array of\n    // keys and get the value of the collections object at that key\n    collections => \n        collections ? Object.keys(collections).map(key => collections[key]) : []\n\n)\n\n//Find the collection id matching the url param of the collection id map\nexport const selectCollection = collectionUrlParam => \n    createSelector(\n        [selectCollections],\n        //look inside the collections map object to find the corresponding colection object\n        //and pass it to the CollectionPage component\n        collections => collections ? collections[collectionUrlParam] : null\n);\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const isCollectionsLoaded = createSelector(\n    [selectShop],\n    //if our collections is loaded return true, otherwise return false\n    shop => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}