{"ast":null,"code":"var _jsxFileName = \"/Users/bolad/Desktop/react-projects/bld-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => history.push('/checkout'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); //wrap the connect function inside withRouter(high order component) so that the \n//CartDropDown component can receive the history prop from withRouter\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/bolad/Desktop/react-projects/bld-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","selectCartItems","connect","withRouter","createStructuredSelector","toggleCartHidden","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQD,SAAS,CAACE,MAAV,GACIF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAI,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CADJ,GAGI;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALZ,CADJ,EAUI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAMH,OAAO,CAACK,IAAR,CAAa,WAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CADJ;;AAeA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAEN;AADkC,CAAD,CAAhD,C,CAIA;AACA;;AACA,eAAeE,UAAU,CAACD,OAAO,CAACY,eAAD,CAAP,CAAyBR,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({ cartItems, history }) => (\n    <div className=\"cart-dropdown\">\n        <div className=\"cart-items\">\n            {\n                cartItems.length ? (\n                    cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem}/>)\n                ) : (\n                    <span className=\"empty-message\">Your cart is empty</span>\n                )\n            }\n        </div>\n        <CustomButton onClick={() => history.push('/checkout')}>GO TO CHECKOUT</CustomButton>\n    </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n});\n\n//wrap the connect function inside withRouter(high order component) so that the \n//CartDropDown component can receive the history prop from withRouter\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}