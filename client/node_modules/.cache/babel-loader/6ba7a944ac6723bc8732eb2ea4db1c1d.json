{"ast":null,"code":"var _jsxFileName = \"/Users/bolad/Desktop/react-projects/bld-clothing/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { createStructuredSelector } from 'reselect';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); //whenever the document snapShot object updates\n\n        userRef.onSnapshot(snapShot => {\n          //set the currentUser state to the snapShot data\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n      }\n\n      addCollectionAndDocuments('collections', collectionsArray.map(({\n        title,\n        items\n      }) => ({\n        title,\n        items\n      })));\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n} //get currentUser from the userReducer from redux state(rootReducer) \n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //call the setCurrentUser action and pass in the user object as the payload, and pass it to\n//every reducer via dispatch\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  collectionsArray: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/bolad/Desktop/react-projects/bld-clothing/src/App.js"],"names":["React","Switch","Route","Redirect","connect","setCurrentUser","HomePage","ShopPage","CheckoutPage","SignInAndSignUpPage","Header","auth","createUserProfileDocument","selectCurrentUser","createStructuredSelector","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","addCollectionAndDocuments","collectionsArray","map","title","items","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user","selectCollectionsForPreview"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AAEA,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAElB,UAAM;AAAEb,MAAAA;AAAF,QAAqB,KAAKc,KAAhC;AAEA,SAAKF,mBAAL,GAA2BN,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C,CADY,CAEZ;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B;AACAnB,UAAAA,cAAc,CAAC;AACboB,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADA;AAEb,eAAGD,QAAQ,CAACE,IAAT;AAFU,WAAD,CAAd;AAID,SAND;AAOD,OAVD,MAUO;AACLrB,QAAAA,cAAc,CAACgB,QAAD,CAAd;AACD;;AACDM,MAAAA,yBAAyB,CAAC,aAAD,EAAgBC,gBAAgB,CAACC,GAAjB,CAAqB,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,MAAuB;AAAED,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAvB,CAArB,CAAhB,CAAzB;AACD,KAf0B,CAA3B;AAgBD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKf,mBAAL;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE3B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKW,KAAL,CAAWe,WAAX,GACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGG,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAqBD;;AApD+B,C,CAuDlC;;;AACA,MAAMC,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CoB,EAAAA,WAAW,EAAErB;AADkC,CAAD,CAAhD,C,CAIA;AACA;;AACA,MAAMuB,kBAAkB,GAAGC,QAAQ,KAAK;AACtChC,EAAAA,cAAc,EAAEiC,IAAI,IAAID,QAAQ,CAAChC,cAAc,CAACiC,IAAD,CAAf,CADM;AAEtCV,EAAAA,gBAAgB,EAAEW;AAFoB,CAAL,CAAnC;;AAKA,eAAenC,OAAO,CAAC+B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { createStructuredSelector } from 'reselect';\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        //whenever the document snapShot object updates\n        userRef.onSnapshot(snapShot => {\n          //set the currentUser state to the snapShot data\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth)\n      }\n      addCollectionAndDocuments('collections', collectionsArray.map(({ title, items }) => ({ title, items })));\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route \n            exact \n            path='/signin' \n            render={() => \n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n               ) : (\n                 <SignInAndSignUpPage />\n               )\n               } \n            />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n//get currentUser from the userReducer from redux state(rootReducer) \nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\n//call the setCurrentUser action and pass in the user object as the payload, and pass it to\n//every reducer via dispatch\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user)),\n  collectionsArray: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}