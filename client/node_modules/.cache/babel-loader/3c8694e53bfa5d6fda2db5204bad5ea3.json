{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAzY3p9bkFJMvS9mcbpqWpcsKsA4g1rojA\",\n  authDomain: \"bld-clothing.firebaseapp.com\",\n  databaseURL: \"https://bld-clothing.firebaseio.com\",\n  projectId: \"bld-clothing\",\n  storageBucket: \"bld-clothing.appspot.com\",\n  messagingSenderId: \"76192001705\",\n  appId: \"1:76192001705:web:9cdb1ad71fd706280903b8\",\n  measurementId: \"G-WQR7SMQQBJ\"\n}; //take the userAuth object received from authentication library and store in database\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //Get the user reference from firestore\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //wait to GET the data from userRef and store it in snapShot\n\n  const snapShot = await userRef.get(); //Save snapShot to database if it does not exist\n\n  if (!snapShot.exists) {\n    //Destructure which data from userAuth you want to save to database\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = Date.now(); //Make asynchronous to the database to store the data\n\n    try {} catch (error) {}\n  }\n\n  console.log(snapShot);\n}; // Initialize Firebase\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/bolad/Desktop/react-projects/bld-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","now","error","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,aANR;AAOXC,EAAAA,KAAK,EAAE,0CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf,C,CAWE;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc,OAD6D,CAG3E;;AACA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB,CAJ2E,CAM3E;;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAP2E,CAS3E;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB,CAHiB,CAKjB;;AACA,QAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,CAxBM,C,CAyBP;;AACAjB,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAzY3p9bkFJMvS9mcbpqWpcsKsA4g1rojA\",\n    authDomain: \"bld-clothing.firebaseapp.com\",\n    databaseURL: \"https://bld-clothing.firebaseio.com\",\n    projectId: \"bld-clothing\",\n    storageBucket: \"bld-clothing.appspot.com\",\n    messagingSenderId: \"76192001705\",\n    appId: \"1:76192001705:web:9cdb1ad71fd706280903b8\",\n    measurementId: \"G-WQR7SMQQBJ\"\n  };\n\n  //take the userAuth object received from authentication library and store in database\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    //Get the user reference from firestore\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    //wait to GET the data from userRef and store it in snapShot\n    const snapShot = await userRef.get();\n\n    //Save snapShot to database if it does not exist\n    if(!snapShot.exists) {\n        //Destructure which data from userAuth you want to save to database\n        const { displayName, email } = userAuth;\n        const createdAt = Date.now();\n        \n        //Make asynchronous to the database to store the data\n        try {\n            \n        } catch (error) {\n            \n        }\n    }\n\n    console.log(snapShot);\n  }\n  // Initialize Firebase\n  firebase.initializeApp(config);\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt: 'select_account'});\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase;\n\n\n"]},"metadata":{},"sourceType":"module"}