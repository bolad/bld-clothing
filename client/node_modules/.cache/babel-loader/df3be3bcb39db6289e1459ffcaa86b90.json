{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; // export const fetchCollectionsStart = () => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START\n// });\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//         const collectionRef = firestore.collection('collections');\n//         dispatch(fetchCollectionsStart());\n//         //this.unsuscribeFromSnapShot = collectionRef.onSnapshot( async snapshot => {**Observable call**\n//         collectionRef.get().then(snapshot => { //**Promise based async call**\n//             const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//             dispatch(fetchCollectionsSuccess(collectionsMap));\n//         }).catch(error => dispatch(\n//             fetchCollectionsFailure(error.message)\n//         ));\n//     }\n// }","map":{"version":3,"sources":["/Users/bolad/Desktop/react-projects/bld-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","collectionsMap","type","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,yBADgC;AAEtDC,EAAAA,OAAO,EAAEH;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMI,uBAAuB,GAAGC,YAAY,KAAK;AACpDJ,EAAAA,IAAI,EAAEL,eAAe,CAACU,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\n// export const fetchCollectionsStart = () => ({\n//     type: ShopActionTypes.FETCH_COLLECTIONS_START\n// });\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\n// export const fetchCollectionsStartAsync = () => {\n//     return dispatch => {\n//         const collectionRef = firestore.collection('collections');\n//         dispatch(fetchCollectionsStart());\n\n//         //this.unsuscribeFromSnapShot = collectionRef.onSnapshot( async snapshot => {**Observable call**\n//         collectionRef.get().then(snapshot => { //**Promise based async call**\n//             const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//             dispatch(fetchCollectionsSuccess(collectionsMap));\n//         }).catch(error => dispatch(\n//             fetchCollectionsFailure(error.message)\n//         ));\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}